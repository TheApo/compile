/**
 * @license
 * SPDX-License-Identifier: Apache-2.0
 */

:root {
  --background-color: #0A051A;   /* Deep space blue/purple */
  --surface-color: #1A113B;      /* Dark violet surface */
  --surface-hover: #2c1d63;    /* Brighter violet for hover */
  --primary-color: #61EFFF;      /* Bright cyan accent */
  --secondary-color: #8A79E8;    /* Muted lavender */
  --text-color: #F0F0F0;         /* Off-white text */
  --danger-color: #ff5555;       /* Keep modern red */
  --success-color: var(--primary-color);
  --lane-divider: var(--surface-hover);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Poppins', sans-serif;
  background-color: var(--background-color);
  color: var(--text-color);
  overflow: hidden;
  height: 100vh;
  width: 100vw;
}

#root {
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.screen {
  width: 100%;
  max-width: 1200px;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 2rem;
  padding: 2rem;
  background-color: rgba(0,0,0,0.2);
  animation: fadeIn 0.5s ease-in-out;
  position: relative;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* --- App Header --- */
.app-header {
  position: absolute;
  top: 2rem;
  left: 2rem;
  right: 2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
}

.app-header h2 {
  margin: 0;
  text-align: center;
}

.app-header .btn-back {
  position: absolute;
  right: 0;
}

h1, h2 {
  font-family: 'Orbitron', sans-serif;
  color: var(--text-color);
  text-shadow: none;
  text-align: center;
  font-weight: 700;
}

h1 {
  font-size: 3rem;
  letter-spacing: 2px;
  color: var(--primary-color);
}

h2 {
  font-size: 2rem;
}

p {
  max-width: 60ch;
  text-align: center;
  line-height: 1.6;
  color: var(--secondary-color);
}

/* --- Components --- */
.btn {
  font-family: 'Orbitron', sans-serif;
  background-color: transparent;
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  border-radius: 4px;
  box-shadow: none;
}

.btn:hover, .btn.active {
  background-color: var(--primary-color);
  color: var(--background-color);
}

.btn:disabled {
    border-color: var(--secondary-color);
    color: var(--secondary-color);
    cursor: not-allowed;
    opacity: 0.5;
    background-color: transparent;
}

.btn-back {
  border-color: var(--secondary-color);
  color: var(--secondary-color);
}

.btn-back:hover {
  background-color: var(--secondary-color);
  color: var(--background-color);
}

/* --- Main Menu --- */
.main-menu {
  justify-content: flex-start;
  padding-top: 2rem;
  gap: 1rem;
  width: 100%;
  max-width: 1400px;
  position: relative;
}

.main-menu-attribution {
  font-size: 0.8rem;
  color: var(--secondary-color);
  text-align: center;
  margin-top: -1.5rem;
  margin-bottom: 1rem;
  line-height: 1.5;
  position: relative;
  z-index: 1;
}

.main-menu-attribution a {
  color: var(--primary-color);
  text-decoration: none;
  transition: all 0.2s ease;
}

.main-menu-attribution a:hover {
  text-decoration: underline;
  text-shadow: 0 0 5px var(--primary-color);
}

.main-menu h1 {
  font-size: 4rem;
  letter-spacing: 4px;
  margin-bottom: 1rem;
}

.main-menu-layout {
  display: flex;
  justify-content: space-around;
  align-items: center;
  width: 100%;
  flex-grow: 1;
  transform: translateY(-50px);
}

.main-menu-preview {
  width: 250px;
  height: 350px;
}

.main-menu-actions-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3rem;
}

.main-menu-start-group, .main-menu-other-actions {
    display: flex;
    flex-direction: column;
    width: 250px;
}

.main-menu-start-group {
    align-items: center;
    gap: 1rem;
}

.main-menu-other-actions {
    gap: 1rem;
    align-items: center;
}

.main-menu-other-actions .btn {
    width: 100%;
}

.version-info {
    font-size: 0.7rem;
    color: var(--secondary-color);
    opacity: 0.6;
    margin-top: 0.5rem;
}

.main-menu-start-group .btn-start {
  background-color: var(--primary-color);
  color: var(--background-color);
  padding: 1rem 2rem;
  font-size: 1.2rem;
  box-shadow: 0 0 10px hsla(188, 100%, 69%, 0.2);
  width: 100%;
  margin-top: 1rem;
}

.main-menu-start-group .btn-start:hover {
    background-color: #a0ffff;
    border-color: #a0ffff;
    transform: scale(1.02);
    box-shadow: 0 0 20px hsla(188, 100%, 69%, 0.4);
}


.difficulty-selector {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  align-items: center;
  width: 100%;
}

.difficulty-title {
  font-family: 'Orbitron', sans-serif;
  font-size: 1rem;
  text-transform: uppercase;
  color: var(--secondary-color);
}

.difficulty-options {
  display: flex;
  gap: 0.5rem;
  width: 100%;
  justify-content: center;
}

.difficulty-options .btn {
  flex: 1;
}

.difficulty-selector .btn:not(.active) {
  border-color: var(--secondary-color);
  color: var(--secondary-color);
  background-color: transparent;
}

.difficulty-selector .btn:not(.active):hover:not(:disabled) {
  background-color: var(--secondary-color);
  color: var(--background-color);
}

.difficulty-selector .btn:disabled {
  opacity: 0.4;
  border-color: var(--surface-hover);
  color: var(--surface-hover);
  background-color: transparent;
}

.control-mechanic-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--secondary-color);
    margin: 1rem 0;
}

.control-mechanic-selector label {
    cursor: pointer;
}

.control-mechanic-selector input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    width: 1.25em;
    height: 1.25em;
    border: 2px solid var(--secondary-color);
    border-radius: 3px;
    background-color: transparent;
    cursor: pointer;
    position: relative;
    transition: all 0.2s ease;
}

.control-mechanic-selector input[type="checkbox"]:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

.control-mechanic-selector input[type="checkbox"]:checked::before {
    content: 'âœ“';
    font-size: 1.2em;
    color: var(--background-color);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-weight: bold;
}

.decorative-card {
  pointer-events: none;
  animation: float 6s ease-in-out infinite;
}
.decorative-card .card-component {
    transform-style: preserve-3d;
}

@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
  100% { transform: translateY(0px); }
}

.card-ticker-container {
  position: absolute;
  bottom: 1rem;
  left: 0;
  width: 100%;
  overflow: hidden;
  -webkit-mask-image: linear-gradient(to right, transparent 0%, black 5%, black 95%, transparent 100%);
  mask-image: linear-gradient(to right, transparent 0%, black 5%, black 95%, transparent 100%);
}

.card-ticker-track {
  display: flex;
  width: fit-content;
  gap: 1rem;
  animation: scroll-cards 360s linear infinite;
}

.card-ticker-track .card-component.in-hand {
  flex-shrink: 0;
  pointer-events: auto;
}

@keyframes scroll-cards {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-50%);
  }
}

/* --- Rules Modal & Log Modal --- */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(10, 5, 26, 0.8);
  backdrop-filter: blur(5px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  animation: fadeIn 0.3s ease-in-out;
}

.modal-content {
  background: var(--surface-color);
  padding: 2rem 3rem;
  border: 1px solid var(--secondary-color);
  border-radius: 8px;
  box-shadow: none;
  max-width: 800px;
  max-height: 80vh;
  overflow-y: auto;
  position: relative;
  text-align: left;
}
.modal-content h2, .modal-content h3 {
    text-align: left;
    margin-bottom: 1rem;
}
.modal-content h3 {
    color: var(--primary-color);
    margin-top: 1.5rem;
}
.modal-content p, .modal-content li {
    text-align: left;
    margin-bottom: 0.75rem;
    line-height: 1.6;
    color: var(--text-color);
}
.modal-content ol {
    padding-left: 2rem;
}
.modal-content strong {
    color: var(--primary-color);
    font-weight: 600;
}
.modal-close-btn {
  position: sticky;
  top: -2rem; /* Counteract parent padding */
  float: right;
  margin-right: -2rem; /* Counteract parent padding */
  z-index: 2;
  padding: 0.5rem 0.75rem;
}

.log-modal-content {
    width: 60%;
    max-width: 700px;
    overflow-y: auto;
}

.log-list {
    list-style: none;
    padding-left: 0;
    counter-reset: log-counter;
    font-family: 'Poppins', sans-serif;
    font-size: 0.9rem;
}

.log-entry {
    counter-increment: log-counter;
    margin-bottom: 0.5rem;
    padding-left: 2.5rem;
    position: relative;
    line-height: 1.5;
}

.log-entry::before {
    content: counter(log-counter) ".";
    position: absolute;
    left: 0;
    top: 0;
    font-weight: 700;
    font-family: 'Orbitron', sans-serif;
    color: var(--secondary-color);
    width: 2rem;
    text-align: right;
    margin-right: 0.5rem;
}

.log-modal-content .log-entry.log-entry-player {
    color: var(--primary-color);
}

.log-modal-content .log-entry.log-entry-opponent {
    color: var(--danger-color);
}

/* Log entry hover effect */
.log-entry:hover {
    background-color: rgba(255, 255, 255, 0.05);
}

/* --- Protocol Selection --- */
.protocol-selection-screen {
  width: 100%;
  max-width: 1400px;
  justify-content: flex-start;
  padding-top: 6rem; /* for header */
  gap: 1rem;
}

.protocol-selection-layout {
  display: grid;
  grid-template-columns: 280px 1fr 280px;
  gap: 2rem;
  max-width: 1400px;  /* Limit width on desktop */
  margin: 0 auto;      /* Center the layout */
  align-items: flex-start;
  flex-grow: 1;
  min-height: 0; /* Prevents grid content from overflowing and pushing siblings */
}

.protocol-selection-sidebar {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.player-protocols-area, .opponent-protocols-area {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  border: 1px solid var(--surface-hover);
  background-color: var(--surface-color);
  border-radius: 8px;
  height: 290px;
  overflow-y: auto;
}

.protocol-preview-area {
    margin-top: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--background-color);
    border-radius: 8px;
    border: 1px solid var(--surface-hover);
    padding: 1rem;
    flex-grow: 1; /* Fills remaining space in the sidebar */
}

.protocol-preview-area .card-component {
    width: 100%;
    font-size: 1.1rem;
}

.protocol-preview-area .card-rule-box {
    font-size: 1.05em;
    padding: 4px 8px;
}

.player-protocols-area h3, .opponent-protocols-area h3 {
  text-align: center;
  margin-bottom: 1rem;
  text-transform: uppercase;
  font-family: 'Orbitron', sans-serif;
  position: sticky;
  top: -1rem; /* Adjust for padding */
  background: var(--surface-color);
  padding: 0.5rem 0;
  z-index: 1;
}

.player-protocols-area h3 { color: var(--primary-color); }
.opponent-protocols-area h3 {
  color: var(--danger-color);
  font-size: 1rem;
  line-height: 1;
  white-space: nowrap;
}

.protocol-display-card {
  /* Card-like appearance matching protocol cards */
  border: 1px solid hsla(253, 91%, 63%, 0.5);
  padding: 1rem;
  text-align: center;
  background-color: var(--surface-color);
  font-family: 'Orbitron', sans-serif;
  font-weight: 700;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.4);
  animation: reveal 0.5s ease-out forwards;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  position: relative;
}

.protocol-display-card.player {
  border-color: var(--primary-color);
  color: var(--primary-color);
  box-shadow: 0 4px 20px rgba(0,0,0,0.4), 0 0 8px var(--primary-color);
}
.protocol-display-card.opponent {
  border-color: var(--danger-color);
  color: var(--danger-color);
  box-shadow: 0 4px 20px rgba(0,0,0,0.4), 0 0 8px var(--danger-color);
}

.protocol-grid-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  height: 100%;
  gap: 0.5rem;
}

.category-filters {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem;
  padding: 0.4rem 1rem;
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 8px;
}

.category-filter-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  user-select: none;
  font-size: 0.9rem;
  color: var(--text-color);
}

.category-filter-item input[type="checkbox"] {
  cursor: pointer;
  width: 18px;
  height: 18px;
  accent-color: var(--primary-color);
}

.category-filter-item:hover {
  color: var(--primary-color);
}

.protocol-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: 1rem;
  width: 100%;
  max-width: 900px;
}

.protocol-card {
  /* Card-like appearance with protocol colors */
  border: 1px solid hsla(253, 91%, 63%, 0.5);
  padding: 0.25rem 0.5rem 0.5rem 0.5rem;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  background-color: var(--surface-color);
  color: var(--text-color);
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.4);
  font-family: 'Orbitron', sans-serif;
  font-weight: 700;
  font-size: 1em;
  position: relative;
  overflow: hidden;
  display: grid;
  grid-template-rows: auto 1fr;
  justify-items: center;
  min-height: 60px;
  height: 60px;
}

.protocol-card .protocol-category-label {
  font-size: 0.45em;
  font-weight: 400;
  opacity: 0.5;
  text-transform: none;
  letter-spacing: 0;
  font-family: 'Poppins', sans-serif;
  line-height: 1;
  margin: 0;
  padding: 0;
  align-self: start;
}

.protocol-card .protocol-name {
  font-size: 1em;
  margin: 0;
  padding: 0;
  align-self: center;
}

.protocol-card:hover:not([aria-disabled="true"]) {
  transform: translateY(-5px);
  box-shadow: 0 6px 25px rgba(0,0,0,0.5), 0 0 10px var(--primary-color);
  border-color: var(--primary-color);
}

.protocol-card.selected {
  border-color: var(--primary-color);
  box-shadow: 0 6px 25px rgba(0,0,0,0.5), 0 0 15px var(--primary-color);
  transform: translateY(-5px) scale(1.05);
}

.protocol-card.chosen {
  opacity: 0.15;
  pointer-events: none;
}

.protocol-card[aria-disabled="true"] {
    opacity: 0.4;
    cursor: not-allowed;
    pointer-events: none;
}

.selected-protocol-cards-container {
    width: 100%;
    max-width: 1400px;
    padding: 0.5rem 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    min-height: 150px;
    height: auto;
    flex-shrink: 0;
}

.protocol-card-row {
    display: flex;
    justify-content: center;
    height: 140px;
    width: 100%;
    gap: 0.5rem;
}

.selected-protocol-cards-container .card-component.in-hand {
    transition: all 0.2s ease-in-out;
}

.selected-protocol-cards-container .card-component.in-hand:hover {
    transform: translateY(-10px);
    z-index: 50;
}


@keyframes reveal {
  from { opacity: 0; transform: scale(0.8) translateY(20px); }
  to { opacity: 1; transform: scale(1) translateY(0); }
}

@keyframes scan-opponent {
    0% {
        box-shadow: 0 0 0 0 transparent;
    }
    25%, 75% {
        box-shadow: 0 0 20px 5px var(--danger-color);
        border-color: var(--danger-color);
        color: var(--danger-color);
    }
    100% {
        box-shadow: 0 0 0 0 transparent;
        border-color: var(--surface-hover);
        color: var(--text-color);
    }
}

.protocol-card.is-scanning {
    animation: scan-opponent 1s ease-in-out;
}


/* --- Game Screen --- */
.game-screen {
    max-width: none;
    padding: 1rem 1rem 5px;
    justify-content: flex-start;
}

.log-button {
    position: absolute;
    top: 2rem;
    right: 2rem;
    z-index: 100;
}

.game-screen-layout {
    display: flex;
    width: 100%;
    height: 100%;
    gap: 1rem;
}

.game-preview-container {
    flex-basis: 280px;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
    border: 1px solid var(--surface-hover);
    background: var(--surface-color);
    border-radius: 8px;
}
.game-preview-container h2 {
  font-size: 1.5rem;
}

.preview-card-area {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--background-color);
    border-radius: 4px;
}
.preview-card-area .card-component {
    width: 100%;
    height: auto;
    aspect-ratio: 2.5 / 3.5;
    font-size: 1.1rem;
}

.game-main-area {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    min-height: 0;
}

.compile-prompt-container {
    padding: 0.75rem;
    text-align: center;
    background: var(--surface-color);
    border-bottom: 2px solid var(--primary-color);
    box-shadow: 0 4px 15px hsla(188, 100%, 69%, 0.2);
    width: 100%;
    flex-shrink: 0;
    animation: fadeIn 0.3s ease-out;
}
.compile-prompt-container h3 {
    color: var(--primary-color);
    font-family: 'Orbitron', sans-serif;
    text-transform: uppercase;
}

/* --- Game Board --- */
.game-board {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.player-side {
    height: 42%;
}
.opponent-side {
    transform: rotate(180deg);
}

.player-side.active-turn .lanes {
    background-color: hsla(188, 100%, 69%, 0.04);
}

.opponent-side.active-turn .lanes {
    background-color: hsla(360, 100%, 67%, 0.04);
}

.opponent-side .lanes {
    flex-direction: row-reverse;
}

.lanes {
    display: flex;
    justify-content: space-around;
    height: 100%;
    gap: 1rem;
    padding: 1rem 0;
    border-radius: 10px;
    transition: background-color 0.4s ease-in-out;
}

.lane {
    width: 160px;
    border: 1px solid var(--surface-hover);
    background-color: rgba(0,0,0,0.2);
    border-radius: 10px;
    position: relative;
    transition: all 0.2s ease-in-out;
}
.lane.playable {
    cursor: pointer;
    border-color: var(--secondary-color);
    background-color: hsla(249, 68%, 69%, 0.05);
}
.lane.playable.matching-protocol {
    border-color: var(--primary-color);
    background-color: hsla(188, 100%, 69%, 0.1);
}

.lane.compilable, .lane.effect-target {
    cursor: pointer;
    border: 2px solid var(--success-color);
    box-shadow: 0 0 15px var(--success-color);
    background-color: hsla(188, 100%, 69%, 0.15);
}

.lane.shift-target {
    cursor: pointer;
    border: 2px solid #FFD700; /* Gold color for target */
    box-shadow: 0 0 15px #FFD700;
    background-color: hsla(51, 100%, 50%, 0.15);
}


.lane-stack {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: flex-start;
}

.btn-play-facedown {
    position: absolute;
    top: -44px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 5;
    padding: 0.9rem 0.7rem;
    font-size: 0.75rem;
    border-radius: 4px;
    white-space: nowrap;
    background-color: var(--surface-color);
    border: 1px solid var(--secondary-color);
    color: var(--secondary-color);
    cursor: pointer;
    transition: all 0.2s ease;
    opacity: 0.9;
    font-family: 'Orbitron', sans-serif;
}

.btn-play-facedown:hover {
    background-color: var(--secondary-color);
    color: var(--background-color);
    border-color: var(--secondary-color);
    opacity: 1;
    transform: translateX(-50%) scale(1.05);
}


.lane-stack .card-component {
    position: absolute;
    top: calc(var(--i) * 64px);
    width: 100px;
    height: 140px;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
}

.card-component.is-targetable {
    cursor: crosshair;
    box-shadow: 0 0 20px 5px var(--danger-color);
    border: 1px solid var(--danger-color);
}

.card-component.is-source-of-effect .card-front {
    border-color: #FFD700; /* Gold */
    box-shadow: 0 0 15px 2px hsla(51, 100%, 50%, 0.7);
}


/* --- Card Animations --- */
@keyframes play-card-player {
  from {
    opacity: 0;
    transform: translateY(100px) scale(0.7);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.lane-stack .card-component.is-entering-player {
    animation: play-card-player 0.5s ease-out forwards;
}

/* For opponent, the parent is rotated 180 degrees. translateY will go "up" relative to the screen. */
.opponent-side .lane-stack .card-component.is-entering-opponent {
    animation: play-card-player 0.5s ease-out forwards;
}

@keyframes delete-animation-player {
    to {
        opacity: 0;
        transform: translateX(-200px) rotate(-15deg) scale(0.8);
    }
}

@keyframes delete-animation-opponent {
    /* The opponent side is rotated 180 degrees, so we move in the positive X direction */
    to {
        opacity: 0;
        transform: translateX(200px) rotate(15deg) scale(0.8);
    }
}

.is-deleting-player {
    animation: delete-animation-player 0.5s ease-in forwards;
}

.opponent-side .is-deleting-opponent {
    animation: delete-animation-opponent 0.5s ease-in forwards;
}

@keyframes draw-card-player {
  from {
    opacity: 0;
    transform: translateY(50px) scale(0.8);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}
.card-component.is-drawing {
    animation: draw-card-player 0.5s ease-out;
}


/* --- Central Protocol Bars Redesign --- */
.protocol-bars-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 0.25rem;
    padding: 0.25rem;
    background-color: transparent;
    border: 1px solid var(--surface-hover);
    border-left: none;
    border-right: none;
    margin: 0.5rem 0;
    height: auto;
    position: relative; /* For centering the coin */
}
.protocol-bar {
    display: flex;
    justify-content: space-around;
    gap: 0.5rem;
}
.protocol-display {
    flex: 1;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.25rem 0.75rem;
    transition: all 0.3s ease;
    text-transform: uppercase;
    position: relative;
    border-right: 1px solid var(--surface-hover);
}
.protocol-display:last-child {
    border-right: none;
}

.protocol-display.compiled {
    background-color: hsla(188, 100%, 69%, 0.15);
    box-shadow: 0 0 8px hsla(188, 100%, 69%, 0.4) inset;
}

.protocol-display.compiled .protocol-name,
.protocol-display.compiled .protocol-value {
    color: var(--primary-color);
    opacity: 1;
    text-shadow: 0 0 5px var(--primary-color);
}

.protocol-display .protocol-name {
    font-weight: 600;
    font-size: 0.9rem;
    text-shadow: none;
}
.protocol-display .protocol-value {
    font-size: 1.2rem;
    font-weight: 700;
    font-family: 'Orbitron', sans-serif;
    color: var(--text-color);
}
.player-bar .protocol-display .protocol-name {
    color: var(--primary-color);
}
.opponent-bar .protocol-display .protocol-name {
    color: var(--danger-color);
}

/* Active turn glow for protocol bars */
.protocol-bar.player-bar.active-turn {
    box-shadow: 0 0 15px var(--primary-color);
    border: 2px solid var(--primary-color);
    border-radius: 4px;
}
.protocol-bar.opponent-bar.active-turn {
    box-shadow: 0 0 15px var(--danger-color);
    border: 2px solid var(--danger-color);
    border-radius: 4px;
}

@keyframes compile-glow {
    0% {
        box-shadow: 0 0 8px hsla(188, 100%, 69%, 0.4) inset, 0 0 5px var(--primary-color);
    }
    50% {
        box-shadow: 0 0 16px hsla(188, 100%, 69%, 0.8) inset, 0 0 15px var(--primary-color);
    }
    100% {
        box-shadow: 0 0 8px hsla(188, 100%, 69%, 0.4) inset, 0 0 5px var(--primary-color);
    }
}

.protocol-display.is-compiling {
    animation: compile-glow 1s ease-in-out;
}

/* --- Control Coin --- */
.control-coin-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  pointer-events: none;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
}

.control-coin {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: 'Orbitron', sans-serif;
  font-size: 1.8rem;
  font-weight: 700;
  background-color: var(--surface-color);
  transition: all 0.4s ease-in-out;
  animation-duration: 2.5s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  pointer-events: auto; /* Allow hover */
  cursor: help;
}

.control-coin.neutral {
  border: 2px solid var(--secondary-color);
  color: var(--secondary-color);
  animation-name: control-pulse-neutral;
}

.control-coin.player-controlled {
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  animation-name: control-pulse-player;
}

.control-coin.opponent-controlled {
  border: 2px solid var(--danger-color);
  color: var(--danger-color);
  animation-name: control-pulse-opponent;
}

@keyframes control-pulse-neutral {
  0% { box-shadow: 0 0 10px var(--secondary-color); }
  50% { box-shadow: 0 0 20px var(--secondary-color); }
  100% { box-shadow: 0 0 10px var(--secondary-color); }
}
@keyframes control-pulse-player {
  0% { box-shadow: 0 0 15px var(--primary-color); }
  50% { box-shadow: 0 0 25px var(--primary-color); }
  100% { box-shadow: 0 0 15px var(--primary-color); }
}
@keyframes control-pulse-opponent {
  0% { box-shadow: 0 0 15px var(--danger-color); }
  50% { box-shadow: 0 0 25px var(--danger-color); }
  100% { box-shadow: 0 0 15px var(--danger-color); }
}

.control-coin-label {
  font-size: 0.7rem;
  font-family: 'Orbitron', sans-serif;
  text-transform: uppercase;
  font-weight: 600;
  transition: color 0.4s ease-in-out;
}

.control-coin-label.neutral {
  color: var(--secondary-color);
}

.control-coin-label.player-controlled {
  color: var(--primary-color);
}

.control-coin-label.opponent-controlled {
  color: var(--danger-color);
}


/* --- Hand Areas --- */
.player-action-area {
    flex-shrink: 0;
    margin-top: auto;
    position: relative; /* Add positioning context for the hand */
}

.player-hand-area, .opponent-hand-area {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.5rem;
}

.player-hand-area {
    gap: -40px;
    position: absolute;
    z-index: 20;
    bottom: -35px; /* Cards are 140px tall, this leaves ~35px visible */
    left: 0;
    right: 0;
    width: 100%;
    height: 140px; /* Explicit height for positioning */
    pointer-events: none; /* Make container non-interactive */
}

.player-hand-area.hand-in-background {
    z-index: 5; /* Lower than phase controller to allow button clicks */
}

.card-component.in-hand {
    transition: all 0.2s ease-in-out;
    cursor: pointer;
    width: 100px;
    height: 140px;
}

.player-hand-area .card-component.in-hand {
    pointer-events: auto; /* Make cards interactive again */
}

.player-hand-area.hand-in-background .card-component.in-hand {
    pointer-events: none; /* Prevent clicks on cards when an action prompt is active */
}

.opponent-hand-area {
    height: 40px;
    gap: -40px;
    overflow: hidden;

}

.opponent-hand-area .card-component.in-hand {
    width: 80px;
    height: 112px;
    transform: rotate(180deg) translateY(68px);
}

.opponent-hand-area .card-component.in-hand:hover {
  transform: rotate(180deg) translateY(68px); /* Keep original transform to prevent upward shift */
}

.opponent-hand-area .card-component.in-hand:hover .card-front {
  border-color: var(--primary-color);
  box-shadow: 0 0 10px var(--primary-color);
}

/* --- Card Component --- FUTURISTIC REDESIGN --- */
.card-component {
  width: 250px;
  height: 350px;
  perspective: 1000px; /* For 3D flip */
  background-color: transparent;
  border: none;
  font-size: 1rem;
  color: var(--text-color);
  line-height: 1.4;
  transition: all 0.2s ease-in-out;
  position: relative;
}

.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.card-component.is-discarding {
    animation: discard-animation 0.5s ease-out forwards;
}

@keyframes discard-animation {
    from {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
    to {
        opacity: 0;
        transform: translateY(40px) scale(0.8);
    }
}

.card-inner.is-flipped {
  transform: rotateY(180deg);
}

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0,0,0,0.4);
}

.card-front {
  background-color: var(--surface-color);
  border: 1px solid hsla(253, 91%, 63%, 0.5);
  padding: 10px;
}

.card-back {
  transform: rotateY(180deg);
  border: 1px solid var(--secondary-color);
  background-color: var(--surface-color);
  background-image: repeating-linear-gradient(
    -45deg,
    rgba(0,0,0,0.2),
    rgba(0,0,0,0.2) 8px,
    rgba(138, 121, 232, 0.1) 8px,
    rgba(138, 121, 232, 0.1) 10px
  );
  position: relative;
}

.card-back-value {
    font-family: 'Orbitron', sans-serif;
    color: var(--primary-color);
    text-shadow: 0 0 8px var(--primary-color);
    opacity: 0.8;
    position: absolute;
    top: 5px;
    right: 10px;
    font-size: 2em;
    font-weight: 700;
}


.card-component.selected .card-front {
    border-color: var(--primary-color);
    box-shadow: 0 6px 25px rgba(0,0,0,0.5), 0 0 10px var(--primary-color);
}
.card-component.selected, .card-component.in-hand:hover {
    transform: translateY(-10px);
    z-index: 50;
}

.card-component.multi-selected .card-front {
    border-color: #FFD700; /* Gold */
    box-shadow: 0 6px 25px rgba(0,0,0,0.5), 0 0 10px #FFD700;
}


.card-component.in-hand:hover .card-front,
.lane-stack .card-component:hover .card-front {
    border-color: var(--primary-color);
    box-shadow: 0 6px 25px rgba(0,0,0,0.5), 0 0 10px var(--primary-color);
}


.card-header {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: stretch;
  gap: 6px;
  margin-bottom: 10px;
}

.card-protocol, .card-value {
  background: rgba(10, 5, 26, 0.7);
  border: 1px solid transparent;
  padding: 2px 10px;
  font-family: 'Orbitron', sans-serif;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
}
.card-protocol {
  font-size: 1.1em;
  justify-content: flex-start;
  clip-path: polygon(0 0, 100% 0, calc(100% - 10px) 100%, 0% 100%);
}
.card-value {
  font-size: 1.8em;
  min-width: 40px;
  color: var(--primary-color);
  clip-path: polygon(10px 0, 100% 0, 100% 100%, 0% 100%);
  border-left: 1px solid var(--secondary-color);
}

.card-body {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  gap: 2px;
  min-height: 0;
}

.card-rule-box {
  background-color: rgba(10, 5, 26, 0.6);
  backdrop-filter: blur(2px);
  padding: 2px 2px;
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  text-align: left;
  min-height: 0;
  overflow: hidden;
  line-height: 1.3;
  font-size: 0.85em;
  color: var(--secondary-color);
  position: relative;
  border-radius: 2px;
}

/* Tech-frame border effect for rule boxes */
.card-rule-box::before, .card-rule-box::after {
  content: '';
  position: absolute;
  width: 10px;
  height: 10px;
  border-color: var(--primary-color);
  border-style: solid;
}
.card-rule-box::before {
  top: 2px;
  left: 2px;
  border-width: 1px 0 0 1px;
}
.card-rule-box::after {
  bottom: 2px;
  right: 2px;
  border-width: 0 1px 1px 0;
}

.card-rule-box:not(:empty) {
    color: var(--text-color);
}
.card-rule-box .emphasis {
    color: var(--primary-color);
    font-weight: 600;
}

/* --- Protocol Card Styles --- */
.card-protocol-anarchy .card-front {
    border-color: hsl(15, 85%, 60%);
    background-image:
        radial-gradient(at 50% 50%, hsla(15, 85%, 60%, 0.25) 0%, transparent 50%),
        repeating-linear-gradient(45deg, transparent, transparent 8px, hsla(15, 85%, 50%, 0.08) 8px, hsla(15, 85%, 50%, 0.08) 16px),
        repeating-linear-gradient(-45deg, transparent, transparent 8px, hsla(10, 90%, 55%, 0.06) 8px, hsla(10, 90%, 55%, 0.06) 16px);
}
.card-protocol-apathy .card-front {
    border-color: hsl(240, 5%, 60%);
    background-image:
        radial-gradient(at 80% 80%, hsla(240, 5%, 60%, 0.1), transparent 50%),
        repeating-linear-gradient(0deg, hsla(0,0%,100%,0.02), hsla(0,0%,100%,0.02) 1px, transparent 1px, transparent 3px);
}
.card-protocol-chaos .card-front {
    border-color: hsl(300, 80%, 60%);
    background-image:
        radial-gradient(at 10% 10%, hsla(60, 100%, 50%, 0.15), transparent 30%),
        radial-gradient(at 90% 20%, hsla(180, 100%, 50%, 0.15), transparent 35%),
        radial-gradient(at 30% 80%, hsla(300, 100%, 50%, 0.15), transparent 40%),
        radial-gradient(at 70% 60%, hsla(0, 100%, 50%, 0.1), transparent 25%);
}
.card-protocol-darkness .card-front {
    border-color: hsl(270, 50%, 70%);
    background-image:
        radial-gradient(at 10% 20%, hsla(270, 50%, 70%, 0.2), transparent 60%),
        radial-gradient(at 90% 80%, hsla(250, 60%, 60%, 0.2), transparent 70%);
}
.card-protocol-death .card-front {
    border-color: hsl(0, 70%, 65%);
    background-image:
        radial-gradient(at 50% 100%, hsla(0, 70%, 55%, 0.25), transparent 60%),
        linear-gradient(135deg, hsla(0,0%,0%,0.1) 23%, transparent 23%, transparent 25%, hsla(0,0%,0%,0.1) 25%, hsla(0,0%,0%,0.1) 27%, transparent 27%, transparent 73%, hsla(0,0%,0%,0.1) 73%, hsla(0,0%,0%,0.1) 75%, transparent 75%, transparent 77%, hsla(0,0%,0%,0.1) 77%);
}
.card-protocol-fire .card-front {
    border-color: hsl(20, 90%, 65%);
    background-image:
        radial-gradient(at 50% 110%, hsla(25, 90%, 60%, 0.3), transparent 60%),
        radial-gradient(at 10% 10%, hsla(35, 100%, 70%, 0.15), transparent 50%);
}
.card-protocol-gravity .card-front {
    border-color: hsl(230, 60%, 70%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(230, 60%, 70%, 0.2) 0%, transparent 40%),
        linear-gradient(hsla(0,0%,100%,0.03) 1px, transparent 1px),
        linear-gradient(90deg, hsla(0,0%,100%,0.03) 1px, transparent 1px);
    background-size: 100% 100%, 20px 20px, 20px 20px;
}
.card-protocol-hate .card-front {
    border-color: hsl(350, 60%, 60%);
    background-image:
        radial-gradient(at 0% 100%, hsla(350, 60%, 50%, 0.25), transparent 70%),
        repeating-linear-gradient(120deg, transparent, transparent 15px, hsla(350, 60%, 60%, 0.05) 15px, hsla(350, 60%, 60%, 0.05) 30px);
}
.card-protocol-life .card-front {
    border-color: hsl(140, 70%, 60%);
    background-image:
        radial-gradient(at 50% 0%, hsla(140, 70%, 60%, 0.2), transparent 70%),
        url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%2361efb5' fill-opacity='0.05' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.99-7.5L26 15v18.5l-13 7.5L0 33.5V15z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}
.card-protocol-light .card-front {
    border-color: hsl(50, 100%, 75%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(50, 100%, 75%, 0.25) 0%, transparent 60%);
}
.card-protocol-love .card-front {
    border-color: hsl(320, 80%, 75%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(320, 80%, 75%, 0.1) 0%, hsla(320, 80%, 75%, 0.15) 40%, transparent 70%);
}
.card-protocol-metal .card-front {
    border-color: hsl(210, 15%, 75%);
    background-image:
        radial-gradient(at 10% 10%, hsla(210, 15%, 85%, 0.2), transparent 50%),
        repeating-linear-gradient(175deg, transparent, transparent 1px, hsla(210, 15%, 75%, 0.05) 1px, hsla(210, 15%, 75%, 0.05) 2px);
}
.card-protocol-plague .card-front {
    border-color: hsl(80, 60%, 55%);
    background-image:
        radial-gradient(at 90% 20%, hsla(80, 60%, 55%, 0.2), transparent 50%),
        radial-gradient(at 30% 85%, hsla(90, 50%, 45%, 0.15), transparent 60%);
}
.card-protocol-psychic .card-front {
    border-color: hsl(280, 70%, 70%);
    background-image:
        radial-gradient(ellipse at 50% 100%, hsla(280, 70%, 70%, 0.2), transparent 70%);
}
.card-protocol-speed .card-front {
    border-color: hsl(180, 80%, 60%);
    background-image:
        linear-gradient(0deg, transparent 40%, hsla(180, 80%, 60%, 0.1) 50%, transparent 60%),
        linear-gradient(90deg, transparent 48%, hsla(180, 80%, 60%, 0.2) 50%, transparent 52%);
}
.card-protocol-spirit .card-front {
    border-color: hsl(170, 60%, 65%);
    background-image:
        radial-gradient(at 0% 0%, hsla(170, 60%, 65%, 0.2), transparent 50%),
        radial-gradient(at 100% 100%, hsla(190, 50%, 55%, 0.2), transparent 50%);
}
.card-protocol-water .card-front {
    border-color: hsl(210, 80%, 65%);
    background-image:
        radial-gradient(circle at 20% 30%, hsla(210, 80%, 65%, 0.15), transparent 40%),
        radial-gradient(circle at 80% 70%, hsla(190, 70%, 60%, 0.2), transparent 50%);
}

/* --- Protocol Selection Card Styles (Protocol Grid) --- */
.protocol-card.card-protocol-anarchy {
    border-color: hsl(15, 85%, 60%);
    background-image:
        radial-gradient(at 50% 50%, hsla(15, 85%, 60%, 0.25) 0%, transparent 50%),
        repeating-linear-gradient(45deg, transparent, transparent 8px, hsla(15, 85%, 50%, 0.08) 8px, hsla(15, 85%, 50%, 0.08) 16px),
        repeating-linear-gradient(-45deg, transparent, transparent 8px, hsla(10, 90%, 55%, 0.06) 8px, hsla(10, 90%, 55%, 0.06) 16px);
}
.protocol-card.card-protocol-apathy {
    border-color: hsl(240, 5%, 60%);
    background-image:
        radial-gradient(at 80% 80%, hsla(240, 5%, 60%, 0.1), transparent 50%),
        repeating-linear-gradient(0deg, hsla(0,0%,100%,0.02), hsla(0,0%,100%,0.02) 1px, transparent 1px, transparent 3px);
}
.protocol-card.card-protocol-chaos {
    border-color: hsl(300, 80%, 60%);
    background-image:
        radial-gradient(at 10% 10%, hsla(60, 100%, 50%, 0.15), transparent 30%),
        radial-gradient(at 90% 20%, hsla(180, 100%, 50%, 0.15), transparent 35%),
        radial-gradient(at 30% 80%, hsla(300, 100%, 50%, 0.15), transparent 40%),
        radial-gradient(at 70% 60%, hsla(0, 100%, 50%, 0.1), transparent 25%);
}
.protocol-card.card-protocol-darkness {
    border-color: hsl(270, 50%, 70%);
    background-image:
        radial-gradient(at 10% 20%, hsla(270, 50%, 70%, 0.2), transparent 60%),
        radial-gradient(at 90% 80%, hsla(250, 60%, 60%, 0.2), transparent 70%);
}
.protocol-card.card-protocol-death {
    border-color: hsl(0, 70%, 65%);
    background-image:
        radial-gradient(at 50% 100%, hsla(0, 70%, 55%, 0.25), transparent 60%),
        linear-gradient(135deg, hsla(0,0%,0%,0.1) 23%, transparent 23%, transparent 25%, hsla(0,0%,0%,0.1) 25%, hsla(0,0%,0%,0.1) 27%, transparent 27%, transparent 73%, hsla(0,0%,0%,0.1) 73%, hsla(0,0%,0%,0.1) 75%, transparent 75%, transparent 77%, hsla(0,0%,0%,0.1) 77%);
}
.protocol-card.card-protocol-fire {
    border-color: hsl(20, 90%, 65%);
    background-image:
        radial-gradient(at 50% 110%, hsla(25, 90%, 60%, 0.3), transparent 60%),
        radial-gradient(at 10% 10%, hsla(35, 100%, 70%, 0.15), transparent 50%);
}
.protocol-card.card-protocol-gravity {
    border-color: hsl(230, 60%, 70%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(230, 60%, 70%, 0.2) 0%, transparent 40%),
        linear-gradient(hsla(0,0%,100%,0.03) 1px, transparent 1px),
        linear-gradient(90deg, hsla(0,0%,100%,0.03) 1px, transparent 1px);
    background-size: 100% 100%, 20px 20px, 20px 20px;
}
.protocol-card.card-protocol-hate {
    border-color: hsl(350, 60%, 60%);
    background-image:
        radial-gradient(at 0% 100%, hsla(350, 60%, 50%, 0.25), transparent 70%),
        repeating-linear-gradient(120deg, transparent, transparent 15px, hsla(350, 60%, 60%, 0.05) 15px, hsla(350, 60%, 60%, 0.05) 30px);
}
.protocol-card.card-protocol-life {
    border-color: hsl(140, 70%, 60%);
    background-image:
        radial-gradient(at 50% 0%, hsla(140, 70%, 60%, 0.2), transparent 70%),
        url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%2361efb5' fill-opacity='0.05' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.99-7.5L26 15v18.5l-13 7.5L0 33.5V15z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}
.protocol-card.card-protocol-light {
    border-color: hsl(50, 100%, 75%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(50, 100%, 75%, 0.25) 0%, transparent 60%);
}
.protocol-card.card-protocol-love {
    border-color: hsl(320, 80%, 75%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(320, 80%, 75%, 0.1) 0%, hsla(320, 80%, 75%, 0.15) 40%, transparent 70%);
}
.protocol-card.card-protocol-metal {
    border-color: hsl(210, 15%, 75%);
    background-image:
        radial-gradient(at 10% 10%, hsla(210, 15%, 85%, 0.2), transparent 50%),
        repeating-linear-gradient(175deg, transparent, transparent 1px, hsla(210, 15%, 75%, 0.05) 1px, hsla(210, 15%, 75%, 0.05) 2px);
}
.protocol-card.card-protocol-plague {
    border-color: hsl(80, 60%, 55%);
    background-image:
        radial-gradient(at 90% 20%, hsla(80, 60%, 55%, 0.2), transparent 50%),
        radial-gradient(at 30% 85%, hsla(90, 50%, 45%, 0.15), transparent 60%);
}
.protocol-card.card-protocol-psychic {
    border-color: hsl(280, 70%, 70%);
    background-image:
        radial-gradient(ellipse at 50% 100%, hsla(280, 70%, 70%, 0.2), transparent 70%);
}
.protocol-card.card-protocol-speed {
    border-color: hsl(180, 80%, 60%);
    background-image:
        linear-gradient(0deg, transparent 40%, hsla(180, 80%, 60%, 0.1) 50%, transparent 60%),
        linear-gradient(90deg, transparent 48%, hsla(180, 80%, 60%, 0.2) 50%, transparent 52%);
}
.protocol-card.card-protocol-spirit {
    border-color: hsl(170, 60%, 65%);
    background-image:
        radial-gradient(at 0% 0%, hsla(170, 60%, 65%, 0.2), transparent 50%),
        radial-gradient(at 100% 100%, hsla(190, 50%, 55%, 0.2), transparent 50%);
}
.protocol-card.card-protocol-water {
    border-color: hsl(210, 80%, 65%);
    background-image:
        radial-gradient(circle at 20% 30%, hsla(210, 80%, 65%, 0.15), transparent 40%),
        radial-gradient(circle at 80% 70%, hsla(190, 70%, 60%, 0.2), transparent 50%);
}

/* --- Protocol Display Card Styles (Selected Protocols Sidebar) --- */
.protocol-display-card.card-protocol-anarchy {
    border-color: hsl(15, 85%, 60%);
    background-image:
        radial-gradient(at 50% 50%, hsla(15, 85%, 60%, 0.25) 0%, transparent 50%),
        repeating-linear-gradient(45deg, transparent, transparent 8px, hsla(15, 85%, 50%, 0.08) 8px, hsla(15, 85%, 50%, 0.08) 16px),
        repeating-linear-gradient(-45deg, transparent, transparent 8px, hsla(10, 90%, 55%, 0.06) 8px, hsla(10, 90%, 55%, 0.06) 16px);
}
.protocol-display-card.card-protocol-apathy {
    border-color: hsl(240, 5%, 60%);
    background-image:
        radial-gradient(at 80% 80%, hsla(240, 5%, 60%, 0.1), transparent 50%),
        repeating-linear-gradient(0deg, hsla(0,0%,100%,0.02), hsla(0,0%,100%,0.02) 1px, transparent 1px, transparent 3px);
}
.protocol-display-card.card-protocol-chaos {
    border-color: hsl(300, 80%, 60%);
    background-image:
        radial-gradient(at 10% 10%, hsla(60, 100%, 50%, 0.15), transparent 30%),
        radial-gradient(at 90% 20%, hsla(180, 100%, 50%, 0.15), transparent 35%),
        radial-gradient(at 30% 80%, hsla(300, 100%, 50%, 0.15), transparent 40%),
        radial-gradient(at 70% 60%, hsla(0, 100%, 50%, 0.1), transparent 25%);
}
.protocol-display-card.card-protocol-darkness {
    border-color: hsl(270, 50%, 70%);
    background-image:
        radial-gradient(at 10% 20%, hsla(270, 50%, 70%, 0.2), transparent 60%),
        radial-gradient(at 90% 80%, hsla(250, 60%, 60%, 0.2), transparent 70%);
}
.protocol-display-card.card-protocol-death {
    border-color: hsl(0, 70%, 65%);
    background-image:
        radial-gradient(at 50% 100%, hsla(0, 70%, 55%, 0.25), transparent 60%),
        linear-gradient(135deg, hsla(0,0%,0%,0.1) 23%, transparent 23%, transparent 25%, hsla(0,0%,0%,0.1) 25%, hsla(0,0%,0%,0.1) 27%, transparent 27%, transparent 73%, hsla(0,0%,0%,0.1) 73%, hsla(0,0%,0%,0.1) 75%, transparent 75%, transparent 77%, hsla(0,0%,0%,0.1) 77%);
}
.protocol-display-card.card-protocol-fire {
    border-color: hsl(20, 90%, 65%);
    background-image:
        radial-gradient(at 50% 110%, hsla(25, 90%, 60%, 0.3), transparent 60%),
        radial-gradient(at 10% 10%, hsla(35, 100%, 70%, 0.15), transparent 50%);
}
.protocol-display-card.card-protocol-gravity {
    border-color: hsl(230, 60%, 70%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(230, 60%, 70%, 0.2) 0%, transparent 40%),
        linear-gradient(hsla(0,0%,100%,0.03) 1px, transparent 1px),
        linear-gradient(90deg, hsla(0,0%,100%,0.03) 1px, transparent 1px);
    background-size: 100% 100%, 20px 20px, 20px 20px;
}
.protocol-display-card.card-protocol-hate {
    border-color: hsl(350, 60%, 60%);
    background-image:
        radial-gradient(at 0% 100%, hsla(350, 60%, 50%, 0.25), transparent 70%),
        repeating-linear-gradient(120deg, transparent, transparent 15px, hsla(350, 60%, 60%, 0.05) 15px, hsla(350, 60%, 60%, 0.05) 30px);
}
.protocol-display-card.card-protocol-life {
    border-color: hsl(140, 70%, 60%);
    background-image:
        radial-gradient(at 50% 0%, hsla(140, 70%, 60%, 0.2), transparent 70%),
        url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%2361efb5' fill-opacity='0.05' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.99-7.5L26 15v18.5l-13 7.5L0 33.5V15z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}
.protocol-display-card.card-protocol-light {
    border-color: hsl(50, 100%, 75%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(50, 100%, 75%, 0.25) 0%, transparent 60%);
}
.protocol-display-card.card-protocol-love {
    border-color: hsl(320, 80%, 75%);
    background-image:
        radial-gradient(circle at 50% 50%, hsla(320, 80%, 75%, 0.1) 0%, hsla(320, 80%, 75%, 0.15) 40%, transparent 70%);
}
.protocol-display-card.card-protocol-metal {
    border-color: hsl(210, 15%, 75%);
    background-image:
        radial-gradient(at 10% 10%, hsla(210, 15%, 85%, 0.2), transparent 50%),
        repeating-linear-gradient(175deg, transparent, transparent 1px, hsla(210, 15%, 75%, 0.05) 1px, hsla(210, 15%, 75%, 0.05) 2px);
}
.protocol-display-card.card-protocol-plague {
    border-color: hsl(80, 60%, 55%);
    background-image:
        radial-gradient(at 90% 20%, hsla(80, 60%, 55%, 0.2), transparent 50%),
        radial-gradient(at 30% 85%, hsla(90, 50%, 45%, 0.15), transparent 60%);
}
.protocol-display-card.card-protocol-psychic {
    border-color: hsl(280, 70%, 70%);
    background-image:
        radial-gradient(ellipse at 50% 100%, hsla(280, 70%, 70%, 0.2), transparent 70%);
}
.protocol-display-card.card-protocol-speed {
    border-color: hsl(180, 80%, 60%);
    background-image:
        linear-gradient(0deg, transparent 40%, hsla(180, 80%, 60%, 0.1) 50%, transparent 60%),
        linear-gradient(90deg, transparent 48%, hsla(180, 80%, 60%, 0.2) 50%, transparent 52%);
}
.protocol-display-card.card-protocol-spirit {
    border-color: hsl(170, 60%, 65%);
    background-image:
        radial-gradient(at 0% 0%, hsla(170, 60%, 65%, 0.2), transparent 50%),
        radial-gradient(at 100% 100%, hsla(190, 50%, 55%, 0.2), transparent 50%);
}
.protocol-display-card.card-protocol-water {
    border-color: hsl(210, 80%, 65%);
    background-image:
        radial-gradient(circle at 20% 30%, hsla(210, 80%, 65%, 0.15), transparent 40%),
        radial-gradient(circle at 80% 70%, hsla(190, 70%, 60%, 0.2), transparent 50%);
}

/* --- In-Game Card Overrides --- */
.lane-stack .card-component,
.player-hand-area .card-component.in-hand,
.card-ticker-track .card-component.in-hand,
.protocol-card-grid .card-component.in-hand,
.selected-protocol-cards-container .card-component.in-hand,
.debug-card-grid .card-component.in-hand {
    font-size: 0.6rem;
}
.lane-stack .card-front,
.player-hand-area .card-front,
.card-ticker-track .card-front,
.protocol-card-grid .card-front,
.selected-protocol-cards-container .card-front,
.debug-card-grid .card-front {
    padding: 2px;
}

.lane-stack .card-component .card-header,
.player-hand-area .card-component.in-hand .card-header,
.card-ticker-track .card-component.in-hand .card-header,
.protocol-card-grid .card-component.in-hand .card-header,
.selected-protocol-cards-container .card-component.in-hand .card-header,
.debug-card-grid .card-component.in-hand .card-header {
    margin-bottom: 4px;
    gap: 4px;
}

.lane-stack .card-component .card-protocol,
.player-hand-area .card-component.in-hand .card-protocol,
.card-ticker-track .card-component.in-hand .card-protocol,
.protocol-card-grid .card-component.in-hand .card-protocol,
.selected-protocol-cards-container .card-component.in-hand .card-protocol,
.debug-card-grid .card-component.in-hand .card-protocol {
    padding: 1px 6px;
    clip-path: polygon(0 0, 100% 0, calc(100% - 6px) 100%, 0% 100%);
}

.lane-stack .card-component .card-value,
.player-hand-area .card-component.in-hand .card-value,
.card-ticker-track .card-component.in-hand .card-value,
.protocol-card-grid .card-component.in-hand .card-value,
.selected-protocol-cards-container .card-component.in-hand .card-value,
.debug-card-grid .card-component.in-hand .card-value {
    padding: 1px 6px;
    clip-path: polygon(6px 0, 100% 0, 100% 100%, 0% 100%);
    min-width: 30px;
}

.lane-stack .card-component .card-body,
.player-hand-area .card-component.in-hand .card-body,
.card-ticker-track .card-component.in-hand .card-body,
.protocol-card-grid .card-component.in-hand .card-body,
.selected-protocol-cards-container .card-component.in-hand .card-body,
.debug-card-grid .card-component.in-hand .card-body {
    gap: 2px;
}

.lane-stack .card-component .card-rule-box,
.player-hand-area .card-component.in-hand .card-rule-box,
.card-ticker-track .card-component.in-hand .card-rule-box,
.protocol-card-grid .card-component.in-hand .card-rule-box,
.selected-protocol-cards-container .card-component.in-hand .card-rule-box,
.debug-card-grid .card-component.in-hand .card-rule-box {
    padding: 1px 3px;
    font-size: 0.9em;
    line-height: 1.25;
}

.lane-stack .card-component .card-rule-box::before,
.lane-stack .card-component .card-rule-box::after,
.player-hand-area .card-component.in-hand .card-rule-box::before,
.player-hand-area .card-component.in-hand .card-rule-box::after,
.card-ticker-track .card-component.in-hand .card-rule-box::before,
.card-ticker-track .card-component.in-hand .card-rule-box::after,
.protocol-card-grid .card-component.in-hand .card-rule-box::before,
.protocol-card-grid .card-component.in-hand .card-rule-box::after,
.selected-protocol-cards-container .card-component.in-hand .card-rule-box::before,
.selected-protocol-cards-container .card-component.in-hand .card-rule-box::after,
.debug-card-grid .card-component.in-hand .card-rule-box::before,
.debug-card-grid .card-component.in-hand .card-rule-box::after {
    width: 6px;
    height: 6px;
}

.opponent-hand-area .card-component.in-hand {
    font-size: 0.5rem;
    
    margin-bottom: -3.5rem;
}

/* --- Phase Controller --- */
.phase-controller {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-top: 1px solid var(--surface-hover);
    background: var(--surface-color);
    position: relative;
    z-index: 10; /* Lower than hand */
}

.phase-controller.action-required-player,
.phase-controller.action-required-opponent {
    transition: box-shadow 0.3s ease-in-out, border-top-color 0.3s ease-in-out;
}

.phase-controller.action-required-player {
    box-shadow: 0 -4px 20px -5px var(--primary-color);
    border-top-color: var(--primary-color);
}

.phase-controller.action-required-opponent {
    box-shadow: 0 -4px 20px -5px var(--danger-color);
    border-top-color: var(--danger-color);
}

.effect-source-info {
    font-size: 0.9rem;
    color: var(--secondary-color);
    text-align: left;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--surface-hover);
}

.effect-source-info span {
    font-weight: 600;
    color: var(--text-color);
}

.phase-controller-main {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.phase-info {
    font-size: 1.2rem;
    text-transform: capitalize;
    font-weight: 600;
}
.phase-actions {
    display: flex;
    gap: 1rem;
}

/* --- Game Info Panel --- */
.game-info-panel {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    border: none;
    background: transparent;
}
.info-section {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease-in-out, background-color 0.2s ease;
}
.info-section:hover {
    background-color: var(--surface-hover);
}
.info-section.active-turn.player-info {
    box-shadow: 0 0 15px var(--primary-color);
    border-color: var(--primary-color);
}
.info-section.active-turn.opponent-info {
    box-shadow: 0 0 15px var(--danger-color);
    border-color: var(--danger-color);
}

@keyframes info-flash-player {
    from { box-shadow: 0 0 15px var(--primary-color); }
    to { box-shadow: none; }
}
.info-section.is-drawing.player-info, .info-section.is-discarding.player-info {
    animation: info-flash-player 0.8s ease-out;
}

@keyframes info-flash-opponent {
    from { box-shadow: 0 0 15px var(--danger-color); }
    to { box-shadow: none; }
}
.info-section.is-drawing.opponent-info, .info-section.is-discarding.opponent-info {
    animation: info-flash-opponent 0.8s ease-out;
}

.info-section h3 {
    color: var(--secondary-color);
    margin-bottom: 0.5rem;
    border-bottom: 1px solid var(--surface-hover);
    padding-bottom: 0.5rem;
    font-size: 1rem;
    text-transform: uppercase;
    font-family: 'Orbitron', sans-serif;
}
.player-info h3 {
    color: var(--primary-color);
}

.info-section-body {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.info-line {
    display: flex;
    justify-content: space-between;
    font-size: 0.9rem;
}
.info-line span:last-child {
  font-weight: 600;
}

/* --- Card Library Screen --- */
.card-library-screen {
  max-width: none;
  padding: 1rem;
  padding-top: 6rem; /* Space for header */
  justify-content: flex-start;
}

.card-library-layout {
  display: flex;
  width: 100%;
  height: 100%;
  gap: 2rem;
  max-width: 1400px;
}

.card-library-layout .game-preview-container {
  flex-basis: 350px; /* Wider preview */
  flex-shrink: 0;
  height: fit-content;
}

.card-library-layout .preview-card-area .card-component {
  width: 100%;
  font-size: 1.1rem;
}

.card-library-layout .preview-card-area .card-rule-box {
  font-size: 1.05em; /* Increased from 0.85em for better readability */
  padding: 4px 8px; /* Added padding for spacing */
}

.card-list-container {
  flex-grow: 1;
  overflow-y: auto;
  padding: 1rem 1.5rem;
  background: var(--surface-color);
  border: 1px solid var(--surface-hover);
  border-radius: 8px;
}

/* Scrollbar styling for card list */
.card-list-container::-webkit-scrollbar {
  width: 8px;
}
.card-list-container::-webkit-scrollbar-track {
  background: var(--background-color);
}
.card-list-container::-webkit-scrollbar-thumb {
  background-color: var(--secondary-color);
  border-radius: 4px;
  border: 2px solid var(--background-color);
}

.protocol-group {
  margin-bottom: 2.5rem;
}
.protocol-group:last-child {
  margin-bottom: 0;
}

.protocol-group h3 {
  font-family: 'Orbitron', sans-serif;
  color: var(--primary-color);
  margin-bottom: 1rem;
  border-bottom: 1px solid var(--surface-hover);
  padding-bottom: 0.5rem;
  font-size: 1.2rem;
  text-transform: uppercase;
}

.protocol-group h3 .protocol-category-label {
  font-size: 0.65em;
  opacity: 0.6;
  font-weight: 400;
  text-transform: none;
  font-family: 'Poppins', sans-serif;
}

.protocol-card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap: 1.5rem;
}

.protocol-card-grid .card-component.in-hand {
  cursor: pointer;
}

/* --- Toaster Notification --- */
.toaster-container {
  position: fixed;
  top: 2rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 2000;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  pointer-events: none;
}

.toaster {
  background-color: var(--surface-color);
  padding: 1rem 2rem;
  border-radius: 4px;
  font-family: 'Orbitron', sans-serif;
  animation: fadeInOut 5s ease-in-out forwards;
  text-align: center;
}

@keyframes fadeInOut {
  0% { opacity: 0; transform: translateY(-20px); }
  10% { opacity: 1; transform: translateY(0); }
  90% { opacity: 1; transform: translateY(0); }
  100% { opacity: 0; transform: translateY(-20px); }
}

.toaster.toaster-player {
    color: var(--primary-color);
    border: 1px solid var(--primary-color);
    box-shadow: 0 4px 20px hsla(188, 100%, 69%, 0.3);
}

.toaster.toaster-opponent {
    color: var(--danger-color);
    border: 1px solid var(--danger-color);
    box-shadow: 0 4px 20px hsla(360, 100%, 67%, 0.3);
}

/* --- Rearrange Protocols Modal --- */
.rearrange-modal-content {
    width: 60%;
    max-width: 800px;
}

.rearrange-board-view {
    margin: 2rem 0;
    padding: 1rem;
    border: 1px dashed var(--surface-hover);
    border-radius: 8px;
    background-color: var(--background-color);
}

.rearrange-board-view .protocol-bars-container {
    border: none;
    padding: 0;
    gap: 0.5rem;
}

.rearrange-board-view .protocol-bar {
    border-radius: 4px;
    overflow: hidden;
}

.rearrange-board-view .protocol-display {
    border-right: 1px solid var(--surface-color);
    background-color: var(--surface-hover);
}
.rearrange-board-view .protocol-display:last-child {
    border-right: none;
}

.rearrange-item {
  cursor: grab;
  transition: all 0.2s ease;
}

.rearrange-item.selected {
  background-color: var(--primary-color);
}

.rearrange-item.changed {
  border: 1px solid #FFD700;
  box-shadow: 0 0 8px hsla(51, 100%, 50%, 0.5);
}

.rearrange-item.selected .protocol-name,
.rearrange-item.selected .protocol-value {
  color: var(--background-color);
  text-shadow: none;
}

.rearrange-item:active {
  cursor: grabbing;
  background-color: var(--primary-color);
  opacity: 0.8;
}

.rearrange-item:active .protocol-name,
.rearrange-item:active .protocol-value {
    color: var(--background-color);
    text-shadow: none;
}

.rearrange-actions {
  display: flex;
  justify-content: center;
  margin-top: 1rem;
}

/* --- Debug Modal --- */
.debug-modal-content {
    width: 80%;
    max-width: 1200px;
}

.debug-modal-content h3 {
    margin-top: 1.5rem;
    margin-bottom: 1rem;
    color: var(--primary-color);
    border-bottom: 1px solid var(--surface-hover);
    padding-bottom: 0.5rem;
}

.debug-card-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 1rem;
    background-color: var(--background-color);
    border-radius: 4px;
    min-height: 150px;
    max-height: 250px;
    overflow-y: auto;
}

.debug-card-grid .card-component.in-hand {
    flex-shrink: 0;
}

.debug-card-grid::-webkit-scrollbar {
  width: 8px;
}
.debug-card-grid::-webkit-scrollbar-track {
  background: var(--surface-color);
}
.debug-card-grid::-webkit-scrollbar-thumb {
  background-color: var(--secondary-color);
  border-radius: 4px;
  border: 2px solid var(--surface-color);
}

.debug-modal-content .no-cards {
    color: var(--secondary-color);
    padding: 2rem;
    text-align: center;
}

/* --- Results Screen --- */
.results-screen-content {
    display: flex;
    flex-direction: column;
    gap: 2.5rem;
    padding: 2.5rem;
    background-color: var(--surface-color);
    border-radius: 8px;
    width: 100%;
    max-width: 900px;
}

.results-header {
    display: flex;
    flex-direction: column;
    align-items: center;
}
.results-header h1 {
    font-size: 4rem;
    margin-bottom: 0.5rem;
}
.results-header p {
    font-size: 1.1rem;
    text-align: center;
}

.results-screen.victory .results-header h1 {
    color: var(--primary-color);
    text-shadow: 0 0 15px var(--primary-color);
}

.results-screen.defeat .results-header h1 {
    color: var(--danger-color);
    text-shadow: 0 0 15px var(--danger-color);
}

.results-body {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2.5rem;
}

.final-score-section, .stats-section {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.results-body h3 {
    font-family: 'Orbitron', sans-serif;
    color: var(--secondary-color);
    text-transform: uppercase;
    border-bottom: 1px solid var(--surface-hover);
    padding-bottom: 0.75rem;
    margin-bottom: 0.5rem;
}

.final-score-section .protocol-bars-container {
    border: none;
    padding: 0;
}

.results-label {
    font-family: 'Orbitron', sans-serif;
    font-size: 1.1rem;
    text-transform: uppercase;
    text-align: center;
}

.final-score-section .results-opponent-label {
    color: var(--danger-color);
    margin-bottom: 0.5rem;
}

.final-score-section .results-player-label {
    color: var(--primary-color);
    margin-top: 0.5rem;
}

.stats-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem 2rem;
}

.stat-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.stat-item-label {
    font-size: 0.9rem;
    color: var(--secondary-color);
}

.stat-item-value {
    font-size: 1.5rem;
    font-family: 'Orbitron', sans-serif;
    font-weight: 700;
}

.stat-item-value.player {
    color: var(--primary-color);
}
.stat-item-value.opponent {
    color: var(--danger-color);
}

/* --- Coin Flip Modal --- */
.coin-flip-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 3000;
}

.coin-flip-modal-content {
  max-width: 600px;
  text-align: center;
  padding: 3rem;
}

.coin-flip-modal-content h2 {
  margin-bottom: 1.5rem;
  color: var(--primary-color);
}

.coin-flip-modal-content p {
  color: var(--text-color);
  margin-bottom: 2rem;
}

.coin-flip-choices {
  display: flex;
  gap: 2rem;
  justify-content: center;
  margin: 2rem 0;
}

.coin-flip-choice-btn {
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 2rem 3rem;
  min-width: 150px;
  background-color: var(--surface-hover);
  border: 2px solid var(--secondary-color);
}

.coin-flip-choice-btn:hover {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(97, 239, 255, 0.4);
}

.coin-choice-icon {
  font-size: 3rem;
  font-family: 'Orbitron', sans-serif;
  font-weight: 700;
  color: var(--primary-color);
}

.coin-flip-choice-btn:hover .coin-choice-icon {
  color: var(--background-color);
}

.coin-choice-label {
  font-size: 1.2rem;
  font-family: 'Orbitron', sans-serif;
  text-transform: uppercase;
}

.coin-flip-choice-btn:hover .coin-choice-label {
  color: var(--background-color);
}

.coin-flip-highlight {
  color: var(--primary-color);
  font-weight: 700;
  text-shadow: 0 0 5px var(--primary-color);
}

.coin-flip-animation-container {
  width: 100%;
  height: 200px;
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 1000px;
  margin: 2rem 0;
}

.coin-3d {
  width: 120px;
  height: 120px;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.6s;
}

.coin-3d.is-flipping {
  animation: coin-flip 2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes coin-flip {
  0% {
    transform: rotateY(0deg) rotateX(0deg);
  }
  25% {
    transform: rotateY(360deg) rotateX(180deg);
  }
  50% {
    transform: rotateY(720deg) rotateX(360deg);
  }
  75% {
    transform: rotateY(1080deg) rotateX(540deg);
  }
  100% {
    transform: rotateY(1440deg) rotateX(720deg);
  }
}

.coin-3d.result-heads {
  transform: rotateY(1440deg);
}

.coin-3d.result-tails {
  transform: rotateY(1620deg);
}

.coin-face {
  position: absolute;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background-color: var(--surface-color);
  border: 3px solid var(--primary-color);
  box-shadow: 0 0 20px var(--primary-color);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 4rem;
  font-family: 'Orbitron', sans-serif;
  font-weight: 700;
  color: var(--primary-color);
  text-shadow: 0 0 10px var(--primary-color);
  backface-visibility: hidden;
}

.coin-heads {
  transform: rotateY(0deg);
}

.coin-tails {
  transform: rotateY(180deg);
}

.coin-flip-result-text {
  font-size: 1.2rem;
  margin: 1.5rem 0;
}

.coin-flip-winner-text {
  color: var(--primary-color);
  font-size: 1.3rem;
  font-weight: 700;
  margin: 1rem 0 2rem 0;
  text-shadow: 0 0 8px var(--primary-color);
}

.coin-flip-loser-text {
  color: var(--danger-color);
  font-size: 1.3rem;
  font-weight: 700;
  margin: 1rem 0 2rem 0;
  text-shadow: 0 0 8px var(--danger-color);
}

/* Anarchy-3 Rearrange Restriction Styles */
.rearrange-item.violation {
  border: 2px solid var(--danger-color) !important;
  box-shadow: 0 0 12px rgba(255, 85, 85, 0.7) !important;
  background-color: rgba(255, 85, 85, 0.15) !important;
}

.warning-text {
  color: #FFD700;
  font-weight: 600;
  margin: 1rem 0;
  padding: 0.75rem;
  background-color: rgba(255, 215, 0, 0.1);
  border: 1px solid #FFD700;
  border-radius: 4px;
  text-align: center;
}

.error-text {
  color: var(--danger-color);
  font-weight: 600;
  margin-top: 0.5rem;
}

/**
 * @license
 * SPDX-License-Identifier: Apache-2.0
 *
 * Responsive Styles for Tablets (12-13.3 inch / iPad / iPad Pro)
 * Breakpoints: 1024px-1200px (landscape), 768px-1023px (portrait)
 */

/* ===========================
   TABLET LANDSCAPE MODE (1180px - 1600px)
   iPad Pro 12.9" Landscape (1366px)
   iPad Pro 11" Landscape (1194px)
   iPad Air 11" Landscape (1180px)
   LOTS of horizontal space!
   Desktop (1920px+) is excluded!
   =========================== */

@media (min-width: 1180px) and (max-width: 1600px) {

  /* === Global Font Scaling === */
  :root {
    font-size: 14px;
  }

  h1 {
    font-size: 2.8rem;
  }

  h2 {
    font-size: 1.8rem;
  }

  /* === Buttons === */
  .btn {
    font-size: 0.9rem;
    padding: 0.6rem 1.2rem;
  }

  /* === Main Menu === */
  .main-menu h1 {
    font-size: 3.5rem;
    letter-spacing: 3px;
  }

  .main-menu-preview {
    width: 220px;
    height: 308px;
  }

  .main-menu-actions-container {
    gap: 2rem;
  }

  .main-menu-start-group, .main-menu-other-actions {
    width: 220px;
  }

  /* HIDE Card Ticker on ALL tablets (performance!) */
  .card-ticker-container {
    display: none !important;
  }

  /* === Protocol Selection - LANDSCAPE optimized === */
  .protocol-selection-screen {
    max-width: 100%;
    padding-top: 5rem;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .protocol-selection-layout {
    grid-template-columns: 240px 1fr 240px !important; /* Balanced sidebars in landscape */
    gap: 1.2rem !important;
  }

  .player-protocols-area, .opponent-protocols-area {
    height: 260px;
    padding: 0.75rem;
  }

  .protocol-preview-area {
    padding: 0.75rem;
  }

  .protocol-preview-area .card-component {
    font-size: 0.9rem !important;
  }

  .protocol-grid {
    grid-template-columns: repeat(5, 106px) !important; /* 5 columns in landscape */
    gap: 0.75rem !important;
    justify-content: center !important;
    max-width: 600px !important; /* Fits 5 columns + gaps */
    margin: 0 auto !important;
  }

  .protocol-card {
    font-size: 0.77em !important;
    height: 48px !important;
    min-height: 48px !important;
    width: 106px !important;
    max-width: 106px !important;
  }

  .protocol-card .protocol-category-label {
    font-size: 0.41em !important;
  }
}

/* ===========================
   TABLET PORTRAIT MODE (820px - 1179px)
   iPad Pro Portrait (1024px)
   iPad Air Portrait (834px)
   iPad 10.2" Portrait (810px)
   Limited horizontal space
   =========================== */

@media (max-width: 1179px) and (min-width: 820px) {

  /* === Global Font Scaling === */
  :root {
    font-size: 14px;
  }

  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 1.6rem;
  }

  /* === Buttons === */
  .btn {
    font-size: 0.9rem;
    padding: 0.6rem 1.2rem;
  }

  /* === Main Menu === */
  .main-menu h1 {
    font-size: 3.2rem;
    letter-spacing: 3px;
  }

  .main-menu-preview {
    width: 200px;
    height: 280px;
  }

  .main-menu-actions-container {
    gap: 2rem;
  }

  .main-menu-start-group, .main-menu-other-actions {
    width: 200px;
  }

  /* HIDE Card Ticker on ALL tablets (performance!) */
  .card-ticker-container {
    display: none !important;
  }

  /* === Protocol Selection - PORTRAIT optimized === */
  .protocol-selection-screen {
    max-width: 100%;
    padding-top: 5rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }

  .protocol-selection-layout {
    grid-template-columns: 220px 1fr 220px !important; /* Narrower sidebars for portrait */
    gap: 0.9rem !important;
  }

  .player-protocols-area, .opponent-protocols-area {
    height: 240px;
    padding: 0.6rem;
  }

  .protocol-preview-area {
    padding: 0.6rem;
  }

  .protocol-preview-area .card-component {
    font-size: 0.8rem !important;
  }

  .protocol-grid {
    grid-template-columns: repeat(4, 105px) !important; /* 4 columns in portrait */
    gap: 0.7rem !important;
    justify-content: center !important;
    max-width: 500px !important;
    margin: 0 auto !important;
  }

  .protocol-card {
    font-size: 0.75em !important;
    height: 46px !important;
    min-height: 46px !important;
    width: 105px !important;
    max-width: 105px !important;
  }

  .protocol-card .protocol-category-label {
    font-size: 0.4em !important;
  }

  /* === Game Screen === */
  .game-screen {
    padding: 0.75rem 0.75rem 5px;
  }

  .log-button {
    top: 1rem;
    right: 1rem;
    padding: 0.5rem 1rem;
    font-size: 0.85rem;
  }

  .game-preview-container {
    flex-basis: 220px; /* Reduced from 280px */
    padding: 0.75rem;
    gap: 0.75rem;
  }

  .game-preview-container h2 {
    font-size: 1.3rem; /* Reduced from 1.5rem */
  }

  .preview-card-area .card-component {
    font-size: 0.85rem; /* Reduced from 1.1rem */
  }

  /* === Game Board === */
  .lane {
    width: 130px; /* Reduced from 160px */
  }

  .lane-stack .card-component {
    width: 85px; /* Reduced from 100px */
    height: 119px; /* Reduced from 140px */
    top: calc(var(--i) * 50px); /* Reduced overlap from 64px */
  }

  .btn-play-facedown {
    padding: 0.7rem 0.6rem;
    font-size: 0.7rem;
    top: -40px;
  }

  /* === Protocol Bars === */
  .protocol-bars-container {
    gap: 0.2rem;
    padding: 0.2rem;
    margin: 0.4rem 0;
  }

  .protocol-display {
    padding: 0.2rem 0.6rem;
  }

  .protocol-display .protocol-name {
    font-size: 0.8rem; /* Reduced from 0.9rem */
  }

  .protocol-display .protocol-value {
    font-size: 1rem; /* Reduced from 1.2rem */
  }

  /* === Control Coin === */
  .control-coin {
    width: 35px; /* Reduced from 40px */
    height: 35px;
    font-size: 1.6rem; /* Reduced from 1.8rem */
  }

  .control-coin-label {
    font-size: 0.6rem; /* Reduced from 0.7rem */
  }

  /* === Hand Areas === */
  .player-hand-area .card-component.in-hand {
    width: 70px; /* Reduced from 100px */
    height: 98px; /* Reduced from 140px */
  }

  .opponent-hand-area .card-component.in-hand {
    width: 60px; /* Reduced from 85px */
    height: 84px; /* Reduced from 119px */
  }

  /* === Phase Controller === */
  .phase-controller {
    padding: 0.75rem; /* Reduced from 1rem */
  }

  .phase-controller-text {
    font-size: 0.85rem; /* Reduced from 1rem */
  }

  /* === Card Library === */
  .card-library-layout {
    gap: 1rem; /* Reduced from 2rem */
  }

  .card-library-layout .game-preview-container {
    flex-basis: 280px; /* Reduced from 350px */
  }

  .protocol-card-grid {
    grid-template-columns: repeat(auto-fill, minmax(85px, 1fr)); /* Reduced from 100px */
    gap: 1rem; /* Reduced from 1.5rem */
  }

  /* === Modals === */
  .modal-content {
    padding: 1.5rem 2rem; /* Reduced from 2rem 3rem */
    max-width: 700px; /* Reduced from 800px */
  }

  .log-modal-content {
    width: 70%; /* Increased from 60% for better use of space */
    max-width: 600px;
  }

  /* === Results Screen === */
  .results-screen-content {
    padding: 2rem; /* Reduced from 2.5rem */
    max-width: 750px; /* Reduced from 900px */
  }

  .results-header h1 {
    font-size: 3rem; /* Reduced from 4rem */
  }

  /* === Coin Flip Modal === */
  .coin-flip-modal-content {
    padding: 2rem; /* Reduced from 3rem */
    max-width: 500px; /* Reduced from 600px */
  }

  .coin-flip-choices {
    gap: 1.5rem; /* Reduced from 2rem */
  }

  .coin-flip-choice-btn {
    padding: 1.5rem 2rem; /* Reduced from 2rem 3rem */
    min-width: 120px; /* Reduced from 150px */
  }

  .coin-choice-icon {
    font-size: 2.5rem; /* Reduced from 3rem */
  }
}

/* ===========================
   SMALLER TABLETS (under 900px)
   iPad 10.2", iPad Mini, smaller 11" tablets in portrait
   =========================== */

@media (max-width: 900px) {

  /* === Global === */
  :root {
    font-size: 13px; /* Further reduce */
  }

  h1 {
    font-size: 2rem; /* Further reduced */
  }

  h2 {
    font-size: 1.4rem;
  }

  .screen {
    padding: 1rem;
    gap: 1rem;
  }

  /* === Main Menu === */
  .main-menu h1 {
    font-size: 2.5rem;
    letter-spacing: 2px;
  }

  .main-menu-layout {
    gap: 1rem;
    transform: translateY(-30px);
  }

  .main-menu-preview {
    width: 160px;
    height: 224px;
  }

  .main-menu-actions-container {
    gap: 1.5rem;
  }

  .main-menu-start-group, .main-menu-other-actions {
    width: 180px;
  }

  .card-ticker-container {
    display: none; /* Hide ticker on narrow screens */
  }

  /* === Protocol Selection === */
  .protocol-selection-layout {
    grid-template-columns: 190px 1fr 190px; /* Reduced for smaller tablets */
    gap: 0.75rem;
  }

  .player-protocols-area, .opponent-protocols-area {
    height: 220px;
    padding: 0.6rem;
  }

  .protocol-preview-area {
    padding: 0.5rem;
  }

  .protocol-preview-area .card-component {
    font-size: 0.7rem;
  }

  .protocol-grid {
    grid-template-columns: repeat(4, 100px) !important; /* FIXED 4 columns for smaller tablets */
    gap: 0.6rem !important;
    justify-content: center !important;
    max-width: 500px !important;
    margin: 0 auto !important;
  }

  .protocol-card {
    font-size: 0.7em !important;
    height: 42px !important;
    min-height: 42px !important;
    width: 100px !important;
    max-width: 100px !important;
  }

  .category-filters {
    font-size: 0.8rem;
    padding: 0.3rem 0.75rem;
    gap: 0.5rem;
  }

  /* === Game Screen === */
  .game-preview-container {
    flex-basis: 180px; /* Further reduced */
    padding: 0.5rem;
    gap: 0.5rem;
  }

  .game-preview-container h2 {
    font-size: 1.1rem;
  }

  .preview-card-area .card-component {
    font-size: 0.7rem;
  }

  /* === Game Board === */
  .lane {
    width: 110px; /* Further reduced */
  }

  .lane-stack .card-component {
    width: 70px; /* Further reduced */
    height: 98px;
    top: calc(var(--i) * 42px); /* Less overlap */
  }

  .btn-play-facedown {
    padding: 0.6rem 0.5rem;
    font-size: 0.65rem;
    top: -36px;
  }

  /* === Protocol Bars === */
  .protocol-display .protocol-name {
    font-size: 0.7rem;
  }

  .protocol-display .protocol-value {
    font-size: 0.9rem;
  }

  /* === Control Coin === */
  .control-coin {
    width: 30px;
    height: 30px;
    font-size: 1.4rem;
  }

  .control-coin-label {
    font-size: 0.55rem;
  }

  /* === Hand Areas === */
  .player-hand-area .card-component.in-hand {
    width: 60px;
    height: 84px;
  }

  .opponent-hand-area .card-component.in-hand {
    width: 50px;
    height: 70px;
  }

  /* === Modals === */
  .modal-content {
    padding: 1rem 1.5rem;
    max-width: 600px;
    max-height: 85vh;
  }

  .log-modal-content {
    width: 80%;
    max-width: 500px;
  }

  .log-list {
    font-size: 0.85rem;
  }

  /* === Results Screen === */
  .results-screen-content {
    padding: 1.5rem;
    max-width: 650px;
    gap: 2rem;
  }

  .results-header h1 {
    font-size: 2.5rem;
  }

  .results-body {
    gap: 1.5rem;
  }

  .stats-grid {
    gap: 0.75rem 1.5rem;
  }

  /* === Card Library === */
  .card-library-layout {
    gap: 0.75rem;
  }

  .card-library-layout .game-preview-container {
    flex-basis: 240px;
  }

  .protocol-card-grid {
    grid-template-columns: repeat(auto-fill, minmax(75px, 1fr));
    gap: 0.75rem;
  }

  /* === Coin Flip === */
  .coin-flip-modal-content {
    padding: 1.5rem;
    max-width: 450px;
  }

  .coin-flip-choices {
    gap: 1rem;
  }

  .coin-flip-choice-btn {
    padding: 1.2rem 1.5rem;
    min-width: 100px;
  }

  .coin-choice-icon {
    font-size: 2rem;
  }

  .coin-choice-label {
    font-size: 1rem;
  }
}

/* ===========================
   SMALL TABLETS / LARGE PHONES (under 768px)
   Optional: fÃ¼r sehr kleine Tablets
   =========================== */

@media (max-width: 767px) {
  /* Bei Bedarf weitere Anpassungen fÃ¼r sehr kleine GerÃ¤te */

  .game-screen-layout {
    flex-direction: column; /* Stack layout vertically if needed */
  }

  .game-preview-container {
    flex-basis: auto;
    width: 100%;
    order: -1; /* Move to top */
  }

  .protocol-selection-layout {
    grid-template-columns: 1fr; /* Single column on very small screens */
    grid-template-rows: auto auto auto;
  }

  .protocol-selection-sidebar:first-child {
    order: 1;
  }

  .protocol-grid-container {
    order: 2;
  }

  .protocol-selection-sidebar:last-child {
    order: 3;
  }
}
